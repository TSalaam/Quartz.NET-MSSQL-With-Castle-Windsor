@model IEnumerable<QuartzWebUI.Models.Jobs>
@{
    ViewBag.Title = "Index";
    var grid = new WebGrid(source: Model, canSort: false, rowsPerPage: 10, canPage: true, fieldNamePrefix: "JobGrid");
}
<style>
    .min-width {
        width: 1%;
        white-space: nowrap;
    }

    .align-right {
        text-align: right;
    }

    .word-break {
        word-break: break-all;
    }
</style>
<script>
    function TriggerManuallyJob(id) {
        //alert(id);
        if (confirm('Do you want to trigger this job ?')) {
            var xhttp = new XMLHttpRequest();
            var data = new FormData();
            data.append("JobId", id);
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var jsonResult = JSON.parse(this.responseText);
                    if (jsonResult.responseCode != "000") {
                        alert(jsonResult.responseResult);
                    }
                }
            };
            xhttp.open("POST", '@Url.Action("TriggerQuartzJob","Home")', true);
            xhttp.send(data);
        }
    }
    function DeleteManuallyJob(id) {
        if (confirm('Do you want to delete this job ?')) {
            //alert(id);
            var xhttp = new XMLHttpRequest();
            var data = new FormData();
            data.append("JobId", id);
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var jsonResult = JSON.parse(this.responseText);
                    if (jsonResult.responseCode != "000") {
                        alert(jsonResult.responseResult);
                    }
                    else {
                        location.reload();
                    }
                }
            };
            xhttp.open("POST", '@Url.Action("DeleteQuartzJob", "Home")', true);
            xhttp.send(data);
        }
    }

</script>
<script>
    $(document).ready(function () {
        //$("#QuartzGrid").load("@Url.Action("Index","Home") #QuartzGrid");
        //$("#deleteJob").click(function(id) {
        //    if (confirm('Do you want to delete this job ?')) {
        //        alert(id);
        //        var data = new FormData();
        //        data.append("JobId", id);
        //    }
        //});
        //function DeleteManuallyJob(id) {
        //    if (confirm('Do you want to delete this job ?')) {
        //        //alert(id);
        //        var data = new FormData();
        //        data.append("JobId", id);
        //    }
        //}
    });
</script>
<h1 class="page-header">Recurring Jobs</h1>
<div class="btn-toolbar">
    <a href="@Url.Action("TriggerAllQJob", "Home")" class="btn btn-primary btn-sm">
        <span class="glyphicon glyphicon-play-circle">

        </span>Trigger All!
    </a>
    <a href="@Url.Action("DeleteAllQJob", "Home")" class="btn btn-default btn-sm">
        <span class="glyphicon glyphicon-remove"></span>
        Delete All!
    </a>
</div>
<br />
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Success!</strong> @TempData["Success"]
    </div>

}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger ">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Danger!</strong> @TempData["Error"]
    </div>
}
@grid.GetHtml(
        tableStyle: "table table-responsive",
        //headerStyle:"webgrid-header"
        numericLinksCount: grid.PageCount,
        htmlAttributes: new { id = "QuartzGrid" },
        mode: WebGridPagerModes.All,
        firstText: "<<",
        previousText: "<",
        nextText: ">",
        selectedRowStyle: "webgrid-selected-row",
        headerStyle: "webgrid-header",
        lastText: ">>",
        emptyRowCellValue: "No records Found!",
        columns:
            grid.Columns(
                grid.Column(header: "Actions", format: (item) =>
                    new HtmlString(
                        Html.ActionLink("Trigger", "TriggerQuartzJob", new { JobId = @item.JobId }, new { onclick = "return confirm('Are you sure you wish to trigger this Job?');" }).ToString()
                        + " - " +
                        Html.ActionLink("Delete", "DeleteQuartzJob", new { JobId = @item.JobId }, new { onclick = "return confirm('Are you sure you wish to delete this Job?');" }).ToString()
                        )
                    ),
                //grid.Column(header: "Action", format: (item) => Html.ActionLink("Trigger", "TriggerQuartzJob", new { JobId = @item.JobId }, new { onclick = "return confirm('Are you sure you wish to trigger this Job?');" })),
                //grid.Column(format: (item) => Html.ActionLink("Delete", "DeleteQuartzJob", new { JobId = @item.JobId }, new { onclick = "return confirm('Are you sure you wish to delete this Job?');" })),
                //grid.Column("Action", format: @<div><button class="btn btn-primary btn-xs" id="deleteJob" title="Delete Job" onclick="DeleteManuallyJob('@item.JobId')"><i class="glyphicon glyphicon-trash"></i></button> &nbsp; <button class="btn btn-primary btn-xs" onclick="TriggerManuallyJob('@item.JobId')" title="Trigger Job"><i class="glyphicon glyphicon-repeat"></i></button></div>),
                grid.Column("JobId", format:@<label>@item.JobId</label>),
                grid.Column("Cron", format:@<label>@item.Cron</label>),
                grid.Column("Time Zone", format:@<label><i>@item.TimeZone</i></label>),
                grid.Column("Job Name", format:@<label>@item.JobName</label>),
                grid.Column("Next Execution", format:@<label>@item.NextExecution</label>),
                grid.Column("Last Execution", format:@<label>@item.LastExecution</label>),
                grid.Column("Creation Time", format:@<label>@item.CreateTime</label>)

        ))

